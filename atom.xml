<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yangmiao.fun/"/>
  <updated>2018-09-15T11:51:33.613Z</updated>
  <id>http://yangmiao.fun/</id>
  
  <author>
    <name>YangMiao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搭建我的个人博客</title>
    <link href="http://yangmiao.fun/2018/09/15/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yangmiao.fun/2018/09/15/使用hexo搭建个人博客/</id>
    <published>2018-09-15T11:10:32.515Z</published>
    <updated>2018-09-15T11:51:33.613Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>大学已经过去一半多了，自己很不满足之前的学习效率，所以决定建立一个自己的博客网站，俗话说 “ 好记性不如烂笔头嘛 ”。下面是我的效果图</p><p>#搭建思路</p><h2 id="选择hexo"><a href="#选择hexo" class="headerlink" title="选择hexo"></a>选择<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo</a></h2><p><img src="https://i.loli.net/2018/09/15/5b9cbbb53e977.png" alt="heox首页"></p><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。hexo安装和使用非常方便，效果也非常不错。</p><h2 id="利用github-pages"><a href="#利用github-pages" class="headerlink" title="利用github pages"></a>利用github pages</h2><p>GitHub Pages本用于介绍托管在GitHub的项目，不过，由于他的空间免费稳定，用来做搭建一个博客再好不过了。<br>为什么用github pages？</p><h3 id="1-github-pages完全免费，管理方便"><a href="#1-github-pages完全免费，管理方便" class="headerlink" title="1. github pages完全免费，管理方便"></a>1. github pages完全免费，管理方便</h3><h3 id="2-学会使用git和github对程序员非常重要"><a href="#2-学会使用git和github对程序员非常重要" class="headerlink" title="2. 学会使用git和github对程序员非常重要"></a>2. 学会使用git和github对程序员非常重要</h3><h2 id="使用阿里云购买单独域名"><a href="#使用阿里云购买单独域名" class="headerlink" title="使用阿里云购买单独域名"></a>使用<a href="https://cn.aliyun.com/?spm=5176.8097504.1146454.1.a1ce6fb5Y7atTA" target="_blank" rel="noopener">阿里云</a>购买单独域名</h2><p>github pages的默认网站会是</p><pre><code>用户名.github.io</code></pre><p>是不是感觉很逊。那么我们可以购买属于自己的域名，国内的阿里云和腾讯云都是不错的选择，这里我选择了阿里云。</p><h1 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h1><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>我安装的时候参考了系列视频<a href="https://www.youtube.com/watch?v=Ud1xAhu7t2Y&amp;list=PLXbU-2B80FvDjD_RiuNwsSQ4eF8pkwAIa" target="_blank" rel="noopener">快速使用 Hexo 搭建个人博客</a>（需翻墙）以及<a href="https://www.cnblogs.com/visugar/p/6821777.html" target="_blank" rel="noopener">hexo从零开始到搭建完整</a>。我的安装环境是win10，对于mac用户，请参考网上其他教程。</p><h3 id="1-安装git以及Node-js"><a href="#1-安装git以及Node-js" class="headerlink" title="1. 安装git以及Node.js"></a>1. 安装<a href="https://git-scm.com/" target="_blank" rel="noopener">git</a>以及<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></h3><h3 id="2-打开cmd，输入npm-install-g-hexo-cli即可完成hexo安装"><a href="#2-打开cmd，输入npm-install-g-hexo-cli即可完成hexo安装" class="headerlink" title="2. 打开cmd，输入npm install -g hexo-cli即可完成hexo安装"></a>2. 打开cmd，输入<code>npm install -g hexo-cli</code>即可完成hexo安装</h3><h3 id="3-安装-Hexo-后执行下列命令，Hexo将会在指定文件夹中新建所需要的文件。"><a href="#3-安装-Hexo-后执行下列命令，Hexo将会在指定文件夹中新建所需要的文件。" class="headerlink" title="3. 安装 Hexo 后执行下列命令，Hexo将会在指定文件夹中新建所需要的文件。"></a>3. 安装 Hexo 后执行下列命令，Hexo将会在指定文件夹中新建所需要的文件。</h3><blockquote><p>hexo init <folder><br>cd <folder><br>npm install</folder></folder></p></blockquote><h3 id="4-新建完成后，指定文件夹的目录如下"><a href="#4-新建完成后，指定文件夹的目录如下" class="headerlink" title="4. 新建完成后，指定文件夹的目录如下"></a>4. 新建完成后，指定文件夹的目录如下</h3><blockquote><p>.<br>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── source<br>|   ├── _drafts<br>|   └── _posts<br>└── themes</p></blockquote><p><img src="https://i.loli.net/2018/09/15/5b9ccdeaea293.png" alt="此处输入图片的描述"><br>_config.yml存储了网站的 配置 信息，可以在此配置大部分的参数。<br>source资源文件夹是存放用户资源的地方。<br>themes存储主题。</p><h3 id="5-配置"><a href="#5-配置" class="headerlink" title="5. 配置"></a>5. 配置</h3><p>在 _config.yml 中修改大部份的配置。可以参考网页<a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">配置|hexo</a>。</p><h3 id="6-一些常用的指令可以参考网页指令-hexo。"><a href="#6-一些常用的指令可以参考网页指令-hexo。" class="headerlink" title="6.一些常用的指令可以参考网页指令|hexo。"></a>6.一些常用的指令可以参考网页<a href="https://hexo.io/zh-cn/docs/commands" target="_blank" rel="noopener">指令|hexo</a>。</h3><p>init</p><pre><code>$ hexo init [folder]</code></pre><p>新建一个网站</p><p>new</p><pre><code>$ hexo new [layout] &lt;title&gt;</code></pre><p>新建一篇文章</p><p>generate</p><pre><code>$ hexo generate</code></pre><p>生成静态文件，添加-d文件生成后立即部署网站，可以简写为</p><pre><code>$ hexo g</code></pre><p>  server</p><pre><code>$ hexo server</code></pre><p>启动服务器。默认情况下，访问网址为：<a href="http://localhost:4000/。" target="_blank" rel="noopener">http://localhost:4000/。</a></p><p>deploy</p><pre><code>$ hexo deploy</code></pre><p>部署网站。</p><h3 id="7-生成网站效果"><a href="#7-生成网站效果" class="headerlink" title="7.生成网站效果"></a>7.生成网站效果</h3><p><img src="https://i.loli.net/2018/09/15/5b9cd17fc0a9e.png" alt="此处输入图片的描述"></p><h3 id="8-修改主题"><a href="#8-修改主题" class="headerlink" title="8.修改主题"></a>8.修改主题</h3><p>我们可以在<a href="https://hexo.io/themes/" target="_blank" rel="noopener">Themes|Hexo</a>选择喜欢的主题进行配置</p><h2 id="将配置好的网站配置到github-pages"><a href="#将配置好的网站配置到github-pages" class="headerlink" title="将配置好的网站配置到github pages"></a>将配置好的网站配置到github pages</h2><ul><li>首先我们需要一个github账号，如果没有的话先创建一个。</li><li>然后我们创建一个repo，名称为yourname.github.io,其中yourname是你的github名称，按照这个规则创建才有用</li><li>打开git bash，配置github账户信息<br>-<blockquote><p>git config –global user.name “YourName”<br>git config –global user.email “YourEmail”</p></blockquote></li></ul><p>将YourName和YourEail都替换成你自己的</p><p>在github中输入</p><blockquote><p>ssh-keygen -t rsa -C “<a href="mailto:youremail@example.com" target="_blank" rel="noopener">youremail@example.com</a></p></blockquote><p>生成ssh，在.ssh文件中找到<code>id_rsa.pub</code>文件，用记事本打开，将里面的内容复制到github中</p><p><img src="https://i.loli.net/2018/09/15/5b9cd85f2e8c2.png" alt="github">!    <a href="https://i.loli.net/2018/09/15/5b9cd895b461f.png" target="_blank" rel="noopener">github</a></p><p><img src="https://i.loli.net/2018/09/15/5b9cd909e467a.png" alt="github"></p><p>最后一步，修改_config.yml文件的一些配置，</p><blockquote><p>deploy:<br>  type: git<br>  repo: <a href="https://github.com/YourgithubName/YourgithubName.github.io.git" target="_blank" rel="noopener">https://github.com/YourgithubName/YourgithubName.github.io.git</a><br>  branch: master</p></blockquote><p>然后进入你的blog目录，分别执行以下命令：</p><blockquote><p>hexo clean<br>hexo generate<br>hexo server</p></blockquote><p>注意deploy的过程中要输入你的username及passward。</p><p>在浏览器中输入<a href="http://yourgithubname.github.io就可以看到个人博客" target="_blank" rel="noopener">http://yourgithubname.github.io就可以看到个人博客</a></p><h2 id="绑定个人域名"><a href="#绑定个人域名" class="headerlink" title="绑定个人域名"></a>绑定个人域名</h2><p>绑定域名我是在阿里云购买的<a href="yangmiao.fun">yangmiao.fun</a>。<br>首先我们再github你的博客项目中添加一个叫CNAME的文件<br><img src="https://i.loli.net/2018/09/15/5b9cdf6203db2.png" alt="CNAME"><br>在文件中添加你的域名，比如我是</p><pre><code>yangmiao.fun</code></pre><p>然后我们进入阿里云网站，找到自己刚刚购买的域名，点击解析，在解析域名中添加自己博客的ipv4地址，该地址可以通过在cmd中输入以下内容找到</p><pre><code>ping yangmiao.fun</code></pre><p>之后我们就可以通过该地址访问我们的博客了</p><h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><p><img src="https://i.loli.net/2018/09/15/5b9ce3e4e3a17.png" alt="yangmiao.fun"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol><li>学习的过程很辛苦，但是我们唯有这一条路可走。</li><li>第一次写博客，有很多不足的地方。欢迎各位大佬来指针和交流。</li><li>markdown的编写可以参考网上的资料，博主也在学习中。</li></ol><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li><a href="https://www.youtube.com/watch?v=Ud1xAhu7t2Y&amp;list=PLXbU-2B80FvDjD_RiuNwsSQ4eF8pkwAIa" target="_blank" rel="noopener">快速使用 Hexo 搭建个人博客</a></li><li><a href="https://www.cnblogs.com/visugar/p/6821777.html" target="_blank" rel="noopener">hexo从零开始到搭建完整</a></li><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">文档|hexo</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;大学已经过去一半多了，自己很不满足之前的学习效率，所以决定建立一个自己的博客网站，俗话说 “ 好记性不如烂笔头嘛 ”。下面是我的效果图&lt;/p
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>服务计算学习（一）</title>
    <link href="http://yangmiao.fun/2018/09/15/%E6%9C%8D%E5%8A%A1%E8%AE%A1%E7%AE%97%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yangmiao.fun/2018/09/15/服务计算学习（一）/</id>
    <published>2018-09-14T16:50:16.000Z</published>
    <updated>2018-09-14T19:43:57.397Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用-VirtualBox-让-PC-提供云桌面服务"><a href="#使用-VirtualBox-让-PC-提供云桌面服务" class="headerlink" title="使用 VirtualBox 让 PC 提供云桌面服务"></a>使用 VirtualBox 让 PC 提供云桌面服务</h1><p>使用VirtualBox创建虚拟机实现简单的云桌面服务</p><h2 id="1-实验目的"><a href="#1-实验目的" class="headerlink" title="1.实验目的"></a>1.实验目的</h2><p>1.初步了解虚拟化技术，理解云计算的相关概念</p><p>2.为后续课程提供统一的编程与实验环境</p><p>3.理解系统工程师面临的困境</p><h2 id="2-实验环境"><a href="#2-实验环境" class="headerlink" title="2.实验环境"></a>2.实验环境</h2><p>使用个人电脑，win10系统下使用VirtualBox创建centOS虚拟机</p><h2 id="3-实验内容"><a href="#3-实验内容" class="headerlink" title="3.实验内容"></a>3.实验内容</h2><p>1.首先前往<a href="https://www.virtualbox.org/" target="_blank" rel="noopener">VirtualBox官网</a>下载VirtualBox最新版本<br><img src="https://i.loli.net/2018/09/10/5b95518467cc2.png" alt="VirtualBox官网"><br>2.前往<a href="https://www.centos.org/download/" target="_blank" rel="noopener">CentOS官网</a>选择Torrent 国内源下载，本实验下载Minimal版本即可<br><img src="https://i.loli.net/2018/09/10/5b95520441135.png" alt="下载Minimal版本"><br>3.使用VirtualBox创建虚拟机</p><p>安装VirtualBox后攒创建centos虚拟机<br><img src="https://i.loli.net/2018/09/10/5b9553522187e.png" alt=""></p><p>VirtualBox菜单 ：管理 -&gt; 主机网络管理器，创建一块虚拟网卡，网址分配：192.168.100.1/24</p><p><img src="https://i.loli.net/2018/09/10/5b955721e45dd.png" alt=""><br>配置网卡2如图所示</p><p><img src="https://i.loli.net/2018/09/10/5b955671e59b2.png" alt=""></p><p>（未完</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;使用-VirtualBox-让-PC-提供云桌面服务&quot;&gt;&lt;a href=&quot;#使用-VirtualBox-让-PC-提供云桌面服务&quot; class=&quot;headerlink&quot; title=&quot;使用 VirtualBox 让 PC 提供云桌面服务&quot;&gt;&lt;/a&gt;使用 Virtu
      
    
    </summary>
    
    
  </entry>
  
</feed>
